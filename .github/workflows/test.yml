name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rails_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/rails_test
      REDIS_URL: redis://localhost:6379/0
      COVERAGE: true
      MIN_COVERAGE: 90

    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'
          bundler-cache: true
      
      - name: Install dependencies
        run: bundle install
      
      - name: Setup database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      
      - name: Run all tests
        run: bundle exec rspec
      
      - name: Check test coverage
        run: |
          if [ -f coverage/.last_run.json ]; then
            coverage=$(jq '.result.covered_percent' coverage/.last_run.json)
            if (( $(echo "$coverage < $MIN_COVERAGE" | bc -l) )); then
              echo "Warning: Test coverage ($coverage%) is below the minimum required ($MIN_COVERAGE%)"
              exit 0
            fi
          else
            echo "Warning: Coverage report not found"
            exit 0
          fi
      
      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'
          bundler-cache: true
      
      - name: Install dependencies
        run: bundle install
      
      - name: Run Rubocop
        run: |
          bundle exec rubocop --format progress
          bundle exec rubocop --format github
      
      - name: Run Rails Best Practices
        run: bundle exec rails_best_practices .

  security:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'
          bundler-cache: true
      
      - name: Install dependencies
        run: bundle install
      
      - name: Run Brakeman
        run: bundle exec brakeman -q -w3 